<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bluemsun.dao.PlateMapper">

    <select id="getPlateCount" resultType="int">
        select count(*) from bs_bbs.tb_plate;
    </select>

    <select id="getPlatesLimit" resultType="Plate" parameterType="map">
        select u.username, p.id, user_id, plate_name, create_time, p.status from bs_bbs.tb_plate p join bs_bbs.tb_user u on p.user_id=u.id order by create_time desc limit #{startIndex},#{pageSize};
    </select>

    <select id="getAvailablePlateCount" resultType="int">
        select count(*) from bs_bbs.tb_plate where status=0;
    </select>
    
    <select id="getAvailablePlatesLimit" resultType="Plate" parameterType="map">
        select  id, user_id, plate_name, create_time, status from bs_bbs.tb_plate where status=0 order by create_time desc limit #{startIndex},#{pageSize} ;
    </select>

    <select id="checkPlate" parameterType="Plate" resultType="Plate">
        select tp.id, plate_name, user_id, create_time, tp.status, blog_num, tp.description, username
        from bs_bbs.tb_plate tp
        inner join bs_bbs.tb_user tu
        on tp.user_id = tu.id
        where tp.id=#{id};
    </select>

    <insert id="addPlate" parameterType="Plate">
        insert into bs_bbs.tb_plate(plate_name, user_id, create_time) VALUES (#{plateName},#{userId},#{createTime})
    </insert>

    <delete id="deletePlate" parameterType="Plate">
        delete from tb_plate where id=#{id};
    </delete>

    <select id="getPlatesOfHome" resultType="Plate">
        select top, tp.id, plate_name
        from tb_plate_blog tpb
        inner join tb_plate tp on tpb.plate_id = tp.id
        order by top;
    </select>

    <insert id="toppingPlate" parameterType="Plate">
        insert into bs_bbs.tb_home_plate(plate_id, top) VALUES (#{id},#{top})
    </insert>

    <update id="modifyPlateTop" parameterType="Plate">
        update bs_bbs.tb_home_plate set top=#{top} where plate_id=#{id};
    </update>

    <delete id="cancelToppingPlate" parameterType="Plate">
        delete from bs_bbs.tb_home_plate where plate_id=#{id};
    </delete>

    <select id="isPlateTopped" parameterType="Plate">
        select * from tb_home_plate where plate_id=#{id};
    </select>

    <update id="frozenPlate" parameterType="Plate">
        update bs_bbs.tb_plate set status=1 where id=#{id};
    </update>

    <update id="unfreezePlate" parameterType="Plate">
        update bs_bbs.tb_plate set status=0 where id=#{id};
    </update>

    <insert id="releaseBlogInPlate" parameterType="map">
        insert into bs_bbs.tb_plate_blog(plate_id, blog_id) values (#{plateId},#{blogId})
    </insert>

    <update id="updateBlogPlate" parameterType="map">
        update bs_bbs.tb_plate_blog set plate_id=#{plateId} where blog_id=#{blogId};
    </update>
    
    <delete id="deselectPlate" parameterType="map">
        delete from bs_bbs.tb_plate_blog where blog_id=#{blogId};
    </delete>
    
    <update id="updatePlateDescription" parameterType="Plate">
        update bs_bbs.tb_plate set description=#{description} where id=#{id};
    </update>
    
</mapper>