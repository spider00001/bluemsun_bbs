<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--       xmlns:p="http://www.springframework.org/schema/p"-->
<!--       xmlns:context="http://www.springframework.org/schema/context"-->
<!--       xsi:schemaLocation="-->
<!--            http://www.springframework.org/schema/beans-->
<!--            http://www.springframework.org/schema/beans/spring-beans.xsd-->
<!--            http://www.springframework.org/schema/context-->
<!--            http://www.springframework.org/schema/context/spring-context.xsd">-->
<!--    &lt;!&ndash;扫描redis配置文件&ndash;&gt;-->
<!--    <context:property-placeholder ignore-unresolvable="true" location="classpath:redis.properties"/>-->
<!--    &lt;!&ndash;设置连接池&ndash;&gt;-->
<!--    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
<!--        &lt;!&ndash; 最大空闲连接数 &ndash;&gt;-->
<!--        <property name="maxIdle" value="${redis.maxIdle}"/>-->
<!--        &lt;!&ndash; 最大连接数 &ndash;&gt;-->
<!--        <property name="maxTotal" value="${redis.maxTotal}" />-->
<!--        &lt;!&ndash; 每次释放连接的最大数目 &ndash;&gt;-->
<!--        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />-->
<!--        &lt;!&ndash; 释放连接的扫描间隔（毫秒） &ndash;&gt;-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />-->
<!--        &lt;!&ndash; 连接最小空闲时间 &ndash;&gt;-->
<!--        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />-->
<!--        &lt;!&ndash; 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 &ndash;&gt;-->
<!--        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />-->
<!--        &lt;!&ndash; 在获取连接的时候检查有效性, 默认false &ndash;&gt;-->
<!--        <property name="testOnBorrow" value="${redis.testOnBorrow}" />-->
<!--        <property name="testOnReturn" value="${redis.testOnReturn}" />-->
<!--        &lt;!&ndash; 在空闲时检查有效性, 默认false &ndash;&gt;-->
<!--        <property name="testWhileIdle" value="${redis.testWhileIdle}" />-->
<!--        &lt;!&ndash; 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true &ndash;&gt;-->
<!--        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />-->
<!--    </bean>-->

<!--    &lt;!&ndash;Spring整合Jedis,设置连接属性&ndash;&gt;-->
<!--    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
<!--          p:hostName="${redis.host}"-->
<!--          p:port="${redis.port}"-->
<!--          p:password="${redis.password}"-->
<!--          p:pool-config-ref="poolConfig"-->
<!--          p:timeout="100000"/>-->

<!--    <bean id="redisTemplate"-->
<!--          class="org.springframework.data.redis.core.RedisTemplate">-->
<!--        <property name="connectionFactory" ref="connectionFactory" />-->
<!--        &lt;!&ndash; 如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！&ndash;&gt;-->
<!--        <property name="keySerializer">-->
<!--            &lt;!&ndash;对key的默认序列化器。默认值是StringSerializer&ndash;&gt;-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
<!--        </property>-->
<!--        &lt;!&ndash;是对value的默认序列化器，默认值是取自DefaultSerializer的JdkSerializationRedisSerializer。&ndash;&gt;-->
<!--        <property name="valueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>-->
<!--        </property>-->
<!--        &lt;!&ndash;存储Map时key需要的序列化配置&ndash;&gt;-->
<!--        <property name="hashKeySerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
<!--        </property>-->
<!--        &lt;!&ndash;存储Map时value需要的序列化配置&ndash;&gt;-->
<!--        <property name="hashValueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
<!--        </property>-->
<!--    </bean>-->
<!--    &lt;!&ndash;配置redis工具类bean&ndash;&gt;-->
<!--    <bean id="redisUtils" class="com.bluemsun.utils.RedisUtil"/>-->


<!--</beans>-->
